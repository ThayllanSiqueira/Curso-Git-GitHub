# Inicializar repositório
    * git init

# Adicionar files ao repositório
    * git add index.html

# Adicionar todos os files não adicionado ao repositório
    * git add .
    * git add -A

# Comitar file ao repositório / Criar um ponto na historia
    * git commit -m "primeiro commit"

# Adicionar file e comitar ao mesmo tempo
    * git commit -am "change file"

# Mostrar todas as branch do projeto
    * git branch

# Criar branch / Ramificação / Universo paralelo
    * git branch feature/cart

# Deletar branch do historia
    * git branch -D feature/cart

# Deletando um branch remoto
    * git push origin :teste

# Alterar para a branch criada
    * git checkout feature/cart

# Voltando para branch Master
    * git checkout master

# Criar uma branch já alterando o repositório local para apontar para ela 
    * git checkout -b teste

# Voltar um somente um arquivo para a linha do tempo antiga
    * git checkout 'idcommit' --file.recuperar

# Voltar um arquivo para ponto inicial do commit que estava
    * git checkout HEAD -- 'filename'

# Verificar se há mudanças no repositório local
    * git status

# Verificar commits realizados / Pontos na historia
    * git log
    * git log --oneline -> Verificar commits com uma linha
    * git log --oneline --decorate --all --graph -> verificar o grafo da arvore de branchs

# Mergear / Unir as branch - Sempre realizar o comando da branch destino
    * git merge feature/cart

# Verificar alterações de commit específico / pontos na historia
    * git show 'idcommit'

# Verificar alterações do ultimo commit / pontos na historia
    * git show

# Verificar o que foi modificado antes do commit
    * git diff

# Verificar quais arquivos foram modificados
    * git diff --name-only

# Verificar o que foi alterado em um arquivo específico
    * git diff 'nomearquivo'

# Emparelhar repositório local para repositório remoto "Servidor / GITHUB"
    * git remote add origin 'url'

# Verificar repositórios remotos
    * git remote -v 

# Enviar files do repositório local para o repositório remoto na branch master
    * git push "-U origin master - Somente para criar a master na origin" 

# Pegar repositórios já iniciados na nuvem remota
    * git clone 'url'
    
# Pegar branch específico do repositório remoto após ja ter feito o clone do master
    * git checkout -b <nome-do-seu-branch-local> origin/<nome-do-branch-remoto>
    
# Clonar apenas o branch específico do repositório remoto
    * git clone -b <nome-do-branch-remoto> 	'url-clone'

# Puxar atualizações do repositório remoto para o repositório local.
    * git pull

# Voltando para um commit específico do branch
    * git reset --soft 'idcommit' -> Volta para o ponto, mantém os arquivos futuros sem comitálos
    * git reset --mixed 'idcommit' -> Volta para o ponto, mantém os arquivos futuros sem adinálos
    * git reset --hard 'idcommit' -> Reseta tudo e perde todos os arquivos futuros

# Revertendo sem perder o código
    * git revert --no-edit 'idcommit-error'

#############################################################################################################################

# Entrar na pasta por linha de comando e depois
git init

# Configure seus dados no git
git config --global user.name "Luiz Otávio Miranda"
git config --global user.email "luizomf@gmail.com"

# Faça o commit inicial
git commit -am 'Initial'

# Adicionar os arquivos
git add arquivo.ext
# ou
git add .

# Veja o status
git status

# Salvar alterações (commit das alterações)
git commit -am 'Mensagem do que foi adicionado'

# Ver alterações
git log --all --decorate --oneline --graph

# Acessar algum commit específico
git checkout <identificador>

# Criar um novo branch daquele commit
git checkout -b <nome>

# Ver branchs
git branch

# Renomear branchs locais
git branch -m <nome> <novo_nome>

# Voltar ao master
git checkout master

# Merge (juntar o master ao seu novo branch)
git merge <nome>

# Tags
git tag v0.1.1
# apagar
git tag -d <nome>

# Clone
git clone url_do_repo

# Adicionando repositório remoto
git remote add <nome> usuario@url_do_repo

# Baixar alterações do repo remoto
git pull <nome_do_repo> <branch>

# Enviar commits para o repo remoto
git push <nome_do_repo> <branch>

# Criando seu próprio repo
git init --bare

# Git ignore (ignore alguns arquivos) com o .gitignore
https://www.gitignore.io/

# Revertendo alterações antes de commitar (arquivos precisar estar staged)
git reset --hard

# Removendo arquivos não adicionados
git clean -f

# Ver branchs remotos
git remote show <nome_do_repo>

# Apagar branchs remotos
git push --delete <nome_do_repo> <nome_branch>

# Apagar remoto
git remote -rm <nome_do_repo>

# Desfazendo commits
git reset --hard HEAD~1

